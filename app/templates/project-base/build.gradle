plugins {
    id 'groovy'
    id 'jacoco'
    id 'project-report'
    id 'ru.vyarus.java-lib' version '1.0.1'
    id 'ru.vyarus.github-info' version '1.0.0'<% if (enableQualityChecks) { %>
    id 'ru.vyarus.animalsniffer' version '1.0.0'
    id 'ru.vyarus.quality' version '1.2.0'<% } %>
    id 'com.github.kt3k.coveralls' version '2.4.0x'
    id 'com.jfrog.bintray' version '1.5'
    id 'net.researchgate.release' version '2.3.4'
    id 'com.github.ben-manes.versions' version '0.11.3'
}

sourceCompatibility = <%= targetJava %>
targetCompatibility = <%= targetJava %>

wrapper {
    gradleVersion = 2.10
}

repositories { jcenter(); mavenCentral(); mavenLocal() }
dependencies {
    <% if (animalsnifferSignature) { %>signature '<%= animalsnifferSignature %>'

    <% } %>provided 'com.google.code.findbugs:jsr305:3.0.1'
    provided 'com.google.code.findbugs:annotations:3.0.1'

    compile 'org.slf4j:slf4j-api:1.7.13'

    testCompile 'ch.qos.logback:logback-classic:1.1.3'
    testCompile 'org.slf4j:jul-to-slf4j:1.7.13'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
}

group = '<%= libGroup %>'
description = '<%= libDesc %>'

github {
    user = '<%= githubUser %>'
    license = 'MIT'
}

pom {
    developers {
        developer {
            id "<%= githubUser %>"
            name "<%= authorName %>"
            email "<%= authorEmail %>"
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? bintrayUser : 'USER'
    key = project.hasProperty('bintrayKey') ? bintrayKey : 'KEY'
    publications = ['maven']
    dryRun = false
    publish = true
    pkg {
        repo = '<%= bintrayRepo %>'
        name = project.name
        desc = project.description
        labels = [<%- libTags %>]
        publicDownloadNumbers = true
        version {
            gpg {
                sign = <%= bintraySignFiles %>
                passphrase = project.hasProperty('gpgPassphrase') ? gpgPassphrase : ''
            }
            mavenCentralSync {
                sync = <%= mavenCentralSync %>
                user = project.hasProperty('sonatypeUser') ? sonatypeUser : 'USER'
                password = project.hasProperty('sonatypePassword') ? sonatypePassword : 'PASSWORD'
            }
        }
    }
}

afterReleaseBuild {
    dependsOn = [bintrayUpload]
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    testLogging {
        events "skipped", "failed", "standard_error"
        exceptionFormat "full"
    }
    maxHeapSize = "512m"
}

dependencyUpdates.revision = 'release'
jacocoTestReport.reports.xml.enabled = true

task showDependenciesTree(dependsOn: 'htmlDependencyReport', group: 'help', description:
        'Generates dependencies tree report and opens it in browser') << {
    java.awt.Desktop.getDesktop().open(file('/build/reports/project/dependencies/root.html'))
}
